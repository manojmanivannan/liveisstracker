name: CI/CD

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  # pull_request:
  #   branches:
  #     - "*"

jobs:
    pytest:
        runs-on: ubuntu-latest
        permissions: write-all
        container:
            image: manojmanivannan18/python-hellomaven:pytest
            volumes:
                - ${{ github.workspace }}:/work
        env:
          MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
          MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
          GITLAB_REPO_USER: ${{ github.actor }}
          GITLAB_REPO_PASS: ${{ secrets.GITHUB_TOKEN }}
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Cache maven
              uses: actions/cache@v3
              with:
                path: .m2/
                key: maven-deps
            - name: run-test-build
              shell: bash
              run: |
                echo "--This is running in Docker image--"
                cd /work && source .bashrc 
                make run_python_tests TEST_USER=root
    
    build:
      needs: pytest
      runs-on: ubuntu-latest
      permissions: write-all
      container:
        image: manojmanivannan18/python-hellomaven:build
        volumes:
          - ${{ github.workspace }}:/work    
      env:
        MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
        MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
        GITLAB_REPO_USER: ${{ github.actor }}
        GITLAB_REPO_PASS: ${{ secrets.GITHUB_TOKEN }}
        GITLAB_REPO_URL: "ghcr.io/manojmanivannan/liveisstracker"


      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
          with:
              fetch-depth: 0
        - name: Cache maven
          uses: actions/cache@v3
          with:
            path: .m2/
            key: maven-deps
            restore-keys: maven-deps
        - name: Build for PRs
          if: startsWith(github.ref, 'refs/remotes/pull') && github.ref != 'refs/heads/develop'
          shell: bash
          run: |
            cd /work && source .bashrc 
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.head_ref }} --get_version > .m2/current_branch_snapshot
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.head_ref }} --git_repo_url "$GITLAB_REPO_URL"
        - name: Build for develop or branches
          if: ${{ !contains(github.ref, '/tags/') && contains(github.ref, 'refs/heads/') }}
          shell: bash
          run: |
            cd /work && source .bashrc 
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.ref_name }} --get_version > .m2/current_branch_snapshot
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.ref_name }} --git_repo_url "$GITLAB_REPO_URL"
        - name: Build for Tags/Release
          if: contains(github.ref, '/tags/')
          env:
            TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
            TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          shell: bash
          run: |
            cd /work && source .bashrc 
            sed -i "0,/<version>.*/s/<version>.*/<version>${{ github.ref_name }}<\/version>/g" pom.xml
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.ref_name }} --taggedBuild true --get_version > .m2/current_branch_snapshot
            /bin/bash .m2/gitlab_build.sh --branch ${{ github.ref_name }} --taggedBuild true --git_repo_url "$GITLAB_REPO_URL"
            pip3 install -U twine wheel
            twine upload target/generated-sources/liveisstracker/dist/*

